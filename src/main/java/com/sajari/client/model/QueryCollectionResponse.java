/*
 * Search.io API
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sajari.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sajari.client.model.ActivePromotion;
import com.sajari.client.model.QueryAggregateResult;
import com.sajari.client.model.QueryCollectionResponsePipeline;
import com.sajari.client.model.QueryResult;
import com.sajari.client.model.RedirectResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * QueryCollectionResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class QueryCollectionResponse {
  public static final String SERIALIZED_NAME_ACTIVE_PROMOTIONS = "active_promotions";
  @SerializedName(SERIALIZED_NAME_ACTIVE_PROMOTIONS)
  private java.util.List<ActivePromotion> activePromotions = null;

  public static final String SERIALIZED_NAME_AGGREGATE_FILTERS = "aggregate_filters";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_FILTERS)
  private java.util.Map<String, QueryAggregateResult> aggregateFilters = null;

  public static final String SERIALIZED_NAME_AGGREGATES = "aggregates";
  @SerializedName(SERIALIZED_NAME_AGGREGATES)
  private java.util.Map<String, QueryAggregateResult> aggregates = null;

  public static final String SERIALIZED_NAME_FEATURE_SCORE_WEIGHT = "feature_score_weight";
  @SerializedName(SERIALIZED_NAME_FEATURE_SCORE_WEIGHT)
  private Double featureScoreWeight;

  public static final String SERIALIZED_NAME_PIPELINE = "pipeline";
  @SerializedName(SERIALIZED_NAME_PIPELINE)
  private QueryCollectionResponsePipeline pipeline;

  public static final String SERIALIZED_NAME_PROCESSING_DURATION = "processing_duration";
  @SerializedName(SERIALIZED_NAME_PROCESSING_DURATION)
  private String processingDuration;

  public static final String SERIALIZED_NAME_REDIRECTS = "redirects";
  @SerializedName(SERIALIZED_NAME_REDIRECTS)
  private java.util.Map<String, RedirectResult> redirects = null;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private java.util.List<QueryResult> results = null;

  public static final String SERIALIZED_NAME_TOTAL_SIZE = "total_size";
  @SerializedName(SERIALIZED_NAME_TOTAL_SIZE)
  private String totalSize;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  private java.util.Map<String, Object> variables = null;

  public QueryCollectionResponse() { 
  }

  public QueryCollectionResponse activePromotions(java.util.List<ActivePromotion> activePromotions) {
    
    this.activePromotions = activePromotions;
    return this;
  }

  public QueryCollectionResponse addActivePromotionsItem(ActivePromotion activePromotionsItem) {
    if (this.activePromotions == null) {
      this.activePromotions = new java.util.ArrayList<>();
    }
    this.activePromotions.add(activePromotionsItem);
    return this;
  }

   /**
   * A list of the promotions activated when running the query.
   * @return activePromotions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of the promotions activated when running the query.")

  public java.util.List<ActivePromotion> getActivePromotions() {
    return activePromotions;
  }


  public void setActivePromotions(java.util.List<ActivePromotion> activePromotions) {
    this.activePromotions = activePromotions;
  }


  public QueryCollectionResponse aggregateFilters(java.util.Map<String, QueryAggregateResult> aggregateFilters) {
    
    this.aggregateFilters = aggregateFilters;
    return this;
  }

  public QueryCollectionResponse putAggregateFiltersItem(String key, QueryAggregateResult aggregateFiltersItem) {
    if (this.aggregateFilters == null) {
      this.aggregateFilters = new java.util.HashMap<>();
    }
    this.aggregateFilters.put(key, aggregateFiltersItem);
    return this;
  }

   /**
   * The aggregates run with filters.
   * @return aggregateFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The aggregates run with filters.")

  public java.util.Map<String, QueryAggregateResult> getAggregateFilters() {
    return aggregateFilters;
  }


  public void setAggregateFilters(java.util.Map<String, QueryAggregateResult> aggregateFilters) {
    this.aggregateFilters = aggregateFilters;
  }


  public QueryCollectionResponse aggregates(java.util.Map<String, QueryAggregateResult> aggregates) {
    
    this.aggregates = aggregates;
    return this;
  }

  public QueryCollectionResponse putAggregatesItem(String key, QueryAggregateResult aggregatesItem) {
    if (this.aggregates == null) {
      this.aggregates = new java.util.HashMap<>();
    }
    this.aggregates.put(key, aggregatesItem);
    return this;
  }

   /**
   * The aggregates returned by the query.
   * @return aggregates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The aggregates returned by the query.")

  public java.util.Map<String, QueryAggregateResult> getAggregates() {
    return aggregates;
  }


  public void setAggregates(java.util.Map<String, QueryAggregateResult> aggregates) {
    this.aggregates = aggregates;
  }


  public QueryCollectionResponse featureScoreWeight(Double featureScoreWeight) {
    
    this.featureScoreWeight = featureScoreWeight;
    return this;
  }

   /**
   * The weight applied to the features in the query, used for analyzing the index, neural and feature components for results.  For each result:  &#x60;&#x60;&#x60; score &#x3D; max(index_score, neural_score) * (1 - feature_score_weight) +         feature_score * feature_score_weight &#x60;&#x60;&#x60;
   * @return featureScoreWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The weight applied to the features in the query, used for analyzing the index, neural and feature components for results.  For each result:  ``` score = max(index_score, neural_score) * (1 - feature_score_weight) +         feature_score * feature_score_weight ```")

  public Double getFeatureScoreWeight() {
    return featureScoreWeight;
  }


  public void setFeatureScoreWeight(Double featureScoreWeight) {
    this.featureScoreWeight = featureScoreWeight;
  }


  public QueryCollectionResponse pipeline(QueryCollectionResponsePipeline pipeline) {
    
    this.pipeline = pipeline;
    return this;
  }

   /**
   * Get pipeline
   * @return pipeline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public QueryCollectionResponsePipeline getPipeline() {
    return pipeline;
  }


  public void setPipeline(QueryCollectionResponsePipeline pipeline) {
    this.pipeline = pipeline;
  }


  public QueryCollectionResponse processingDuration(String processingDuration) {
    
    this.processingDuration = processingDuration;
    return this;
  }

   /**
   * The total time taken to perform the query.
   * @return processingDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total time taken to perform the query.")

  public String getProcessingDuration() {
    return processingDuration;
  }


  public void setProcessingDuration(String processingDuration) {
    this.processingDuration = processingDuration;
  }


  public QueryCollectionResponse redirects(java.util.Map<String, RedirectResult> redirects) {
    
    this.redirects = redirects;
    return this;
  }

  public QueryCollectionResponse putRedirectsItem(String key, RedirectResult redirectsItem) {
    if (this.redirects == null) {
      this.redirects = new java.util.HashMap<>();
    }
    this.redirects.put(key, redirectsItem);
    return this;
  }

   /**
   * A mapping of redirects triggered for all possible variations of the query.
   * @return redirects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A mapping of redirects triggered for all possible variations of the query.")

  public java.util.Map<String, RedirectResult> getRedirects() {
    return redirects;
  }


  public void setRedirects(java.util.Map<String, RedirectResult> redirects) {
    this.redirects = redirects;
  }


  public QueryCollectionResponse results(java.util.List<QueryResult> results) {
    
    this.results = results;
    return this;
  }

  public QueryCollectionResponse addResultsItem(QueryResult resultsItem) {
    if (this.results == null) {
      this.results = new java.util.ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * The results returned by the query.
   * @return results
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The results returned by the query.")

  public java.util.List<QueryResult> getResults() {
    return results;
  }


  public void setResults(java.util.List<QueryResult> results) {
    this.results = results;
  }


  public QueryCollectionResponse totalSize(String totalSize) {
    
    this.totalSize = totalSize;
    return this;
  }

   /**
   * The total number of results that match the query.
   * @return totalSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of results that match the query.")

  public String getTotalSize() {
    return totalSize;
  }


  public void setTotalSize(String totalSize) {
    this.totalSize = totalSize;
  }


  public QueryCollectionResponse variables(java.util.Map<String, Object> variables) {
    
    this.variables = variables;
    return this;
  }

  public QueryCollectionResponse putVariablesItem(String key, Object variablesItem) {
    if (this.variables == null) {
      this.variables = new java.util.HashMap<>();
    }
    this.variables.put(key, variablesItem);
    return this;
  }

   /**
   * The modified variables returned by the pipeline after it has finished processing.
   * @return variables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The modified variables returned by the pipeline after it has finished processing.")

  public java.util.Map<String, Object> getVariables() {
    return variables;
  }


  public void setVariables(java.util.Map<String, Object> variables) {
    this.variables = variables;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryCollectionResponse queryCollectionResponse = (QueryCollectionResponse) o;
    return Objects.equals(this.activePromotions, queryCollectionResponse.activePromotions) &&
        Objects.equals(this.aggregateFilters, queryCollectionResponse.aggregateFilters) &&
        Objects.equals(this.aggregates, queryCollectionResponse.aggregates) &&
        Objects.equals(this.featureScoreWeight, queryCollectionResponse.featureScoreWeight) &&
        Objects.equals(this.pipeline, queryCollectionResponse.pipeline) &&
        Objects.equals(this.processingDuration, queryCollectionResponse.processingDuration) &&
        Objects.equals(this.redirects, queryCollectionResponse.redirects) &&
        Objects.equals(this.results, queryCollectionResponse.results) &&
        Objects.equals(this.totalSize, queryCollectionResponse.totalSize) &&
        Objects.equals(this.variables, queryCollectionResponse.variables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activePromotions, aggregateFilters, aggregates, featureScoreWeight, pipeline, processingDuration, redirects, results, totalSize, variables);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryCollectionResponse {\n");
    sb.append("    activePromotions: ").append(toIndentedString(activePromotions)).append("\n");
    sb.append("    aggregateFilters: ").append(toIndentedString(aggregateFilters)).append("\n");
    sb.append("    aggregates: ").append(toIndentedString(aggregates)).append("\n");
    sb.append("    featureScoreWeight: ").append(toIndentedString(featureScoreWeight)).append("\n");
    sb.append("    pipeline: ").append(toIndentedString(pipeline)).append("\n");
    sb.append("    processingDuration: ").append(toIndentedString(processingDuration)).append("\n");
    sb.append("    redirects: ").append(toIndentedString(redirects)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    totalSize: ").append(toIndentedString(totalSize)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

