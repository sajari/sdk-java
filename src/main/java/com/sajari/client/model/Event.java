/*
 * Search.io API
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sajari.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * An analytics event that relates to a query made on a collection.
 */
@ApiModel(description = "An analytics event that relates to a query made on a collection.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Event {
  public static final String SERIALIZED_NAME_BANNER_ID = "banner_id";
  @SerializedName(SERIALIZED_NAME_BANNER_ID)
  private String bannerId;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private java.util.Map<String, Object> metadata = null;

  public static final String SERIALIZED_NAME_QUERY_ID = "query_id";
  @SerializedName(SERIALIZED_NAME_QUERY_ID)
  private String queryId;

  public static final String SERIALIZED_NAME_REDIRECT_ID = "redirect_id";
  @SerializedName(SERIALIZED_NAME_REDIRECT_ID)
  private String redirectId;

  public static final String SERIALIZED_NAME_RESULT_ID = "result_id";
  @SerializedName(SERIALIZED_NAME_RESULT_ID)
  private String resultId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public Event() { 
  }

  public Event bannerId(String bannerId) {
    
    this.bannerId = bannerId;
    return this;
  }

   /**
   * The identifier of the promotion banner the event is about.
   * @return bannerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the promotion banner the event is about.")

  public String getBannerId() {
    return bannerId;
  }


  public void setBannerId(String bannerId) {
    this.bannerId = bannerId;
  }


  public Event metadata(java.util.Map<String, Object> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public Event putMetadataItem(String key, Object metadataItem) {
    if (this.metadata == null) {
      this.metadata = new java.util.HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * An object made up of field-value pairs that contains additional metadata to record with the event.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An object made up of field-value pairs that contains additional metadata to record with the event.")

  public java.util.Map<String, Object> getMetadata() {
    return metadata;
  }


  public void setMetadata(java.util.Map<String, Object> metadata) {
    this.metadata = metadata;
  }


  public Event queryId(String queryId) {
    
    this.queryId = queryId;
    return this;
  }

   /**
   * The query identifier.
   * @return queryId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The query identifier.")

  public String getQueryId() {
    return queryId;
  }


  public void setQueryId(String queryId) {
    this.queryId = queryId;
  }


  public Event redirectId(String redirectId) {
    
    this.redirectId = redirectId;
    return this;
  }

   /**
   * The identifier of the redirect the event is about.
   * @return redirectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the redirect the event is about.")

  public String getRedirectId() {
    return redirectId;
  }


  public void setRedirectId(String redirectId) {
    this.redirectId = redirectId;
  }


  public Event resultId(String resultId) {
    
    this.resultId = resultId;
    return this;
  }

   /**
   * The identifier of the result the event is about.
   * @return resultId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the result the event is about.")

  public String getResultId() {
    return resultId;
  }


  public void setResultId(String resultId) {
    this.resultId = resultId;
  }


  public Event type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of event, e.g. &#x60;click&#x60;, &#x60;redirect&#x60;, &#x60;purchase&#x60;, &#x60;add_to_cart&#x60;.
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of event, e.g. `click`, `redirect`, `purchase`, `add_to_cart`.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.bannerId, event.bannerId) &&
        Objects.equals(this.metadata, event.metadata) &&
        Objects.equals(this.queryId, event.queryId) &&
        Objects.equals(this.redirectId, event.redirectId) &&
        Objects.equals(this.resultId, event.resultId) &&
        Objects.equals(this.type, event.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bannerId, metadata, queryId, redirectId, resultId, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    sb.append("    bannerId: ").append(toIndentedString(bannerId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    queryId: ").append(toIndentedString(queryId)).append("\n");
    sb.append("    redirectId: ").append(toIndentedString(redirectId)).append("\n");
    sb.append("    resultId: ").append(toIndentedString(resultId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

