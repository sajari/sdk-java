/*
 * Search.io API
 * Search.io offers a search and discovery service with Neuralsearch®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sajari.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sajari.client.model.Banner;
import com.sajari.client.model.QueryResultToken;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * QueryResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class QueryResult {
  public static final String SERIALIZED_NAME_BANNER = "banner";
  @SerializedName(SERIALIZED_NAME_BANNER)
  private Banner banner;

  public static final String SERIALIZED_NAME_FEATURE_SCORE = "feature_score";
  @SerializedName(SERIALIZED_NAME_FEATURE_SCORE)
  private Double featureScore;

  public static final String SERIALIZED_NAME_INDEX_SCORE = "index_score";
  @SerializedName(SERIALIZED_NAME_INDEX_SCORE)
  private Double indexScore;

  public static final String SERIALIZED_NAME_NEURAL_SCORE = "neural_score";
  @SerializedName(SERIALIZED_NAME_NEURAL_SCORE)
  private Double neuralScore;

  public static final String SERIALIZED_NAME_RECORD = "record";
  @SerializedName(SERIALIZED_NAME_RECORD)
  private Object record;

  public static final String SERIALIZED_NAME_RELEVANCE_SCORE = "relevance_score";
  @SerializedName(SERIALIZED_NAME_RELEVANCE_SCORE)
  private Double relevanceScore;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Double score;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private QueryResultToken token;

  public QueryResult() { 
  }

  public QueryResult banner(Banner banner) {
    
    this.banner = banner;
    return this;
  }

   /**
   * Get banner
   * @return banner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Banner getBanner() {
    return banner;
  }


  public void setBanner(Banner banner) {
    this.banner = banner;
  }


  public QueryResult featureScore(Double featureScore) {
    
    this.featureScore = featureScore;
    return this;
  }

   /**
   * The feature score of the result.  This is a value between 0 and 1 representing the business-specific ranking of the result as determined by the ranking adjustments. See [Ranking adjustments](https://docs.search.io/documentation/fundamentals/search-settings/ranking-adjustments) for more information.
   * @return featureScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The feature score of the result.  This is a value between 0 and 1 representing the business-specific ranking of the result as determined by the ranking adjustments. See [Ranking adjustments](https://docs.search.io/documentation/fundamentals/search-settings/ranking-adjustments) for more information.")

  public Double getFeatureScore() {
    return featureScore;
  }


  public void setFeatureScore(Double featureScore) {
    this.featureScore = featureScore;
  }


  public QueryResult indexScore(Double indexScore) {
    
    this.indexScore = indexScore;
    return this;
  }

   /**
   * The index score of the result.  This is a value between 0 and 1 representing the relevance of the result using traditional keyword search. The higher the score the more relevant the result is.
   * @return indexScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The index score of the result.  This is a value between 0 and 1 representing the relevance of the result using traditional keyword search. The higher the score the more relevant the result is.")

  public Double getIndexScore() {
    return indexScore;
  }


  public void setIndexScore(Double indexScore) {
    this.indexScore = indexScore;
  }


  public QueryResult neuralScore(Double neuralScore) {
    
    this.neuralScore = neuralScore;
    return this;
  }

   /**
   * The neural score of the result.  This is a value between 0 and 1 representing the relevance of the result using Neuralsearch®, using AI-based search.
   * @return neuralScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The neural score of the result.  This is a value between 0 and 1 representing the relevance of the result using Neuralsearch®, using AI-based search.")

  public Double getNeuralScore() {
    return neuralScore;
  }


  public void setNeuralScore(Double neuralScore) {
    this.neuralScore = neuralScore;
  }


  public QueryResult record(Object record) {
    
    this.record = record;
    return this;
  }

   /**
   * An object made up of field-value pairs that contains the record data.
   * @return record
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An object made up of field-value pairs that contains the record data.")

  public Object getRecord() {
    return record;
  }


  public void setRecord(Object record) {
    this.record = record;
  }


  public QueryResult relevanceScore(Double relevanceScore) {
    
    this.relevanceScore = relevanceScore;
    return this;
  }

   /**
   * The relevance score of the result.  This is the best of &#x60;index_score&#x60; and &#x60;neural_score&#x60; with any index boosts applied on top.
   * @return relevanceScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The relevance score of the result.  This is the best of `index_score` and `neural_score` with any index boosts applied on top.")

  public Double getRelevanceScore() {
    return relevanceScore;
  }


  public void setRelevanceScore(Double relevanceScore) {
    this.relevanceScore = relevanceScore;
  }


  public QueryResult score(Double score) {
    
    this.score = score;
    return this;
  }

   /**
   * The overall relevance of the result.  This is a value between 0 and 1 that combines the index, neural and feature scores. The higher the score the more relevant the result is.
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The overall relevance of the result.  This is a value between 0 and 1 that combines the index, neural and feature scores. The higher the score the more relevant the result is.")

  public Double getScore() {
    return score;
  }


  public void setScore(Double score) {
    this.score = score;
  }


  public QueryResult token(QueryResultToken token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public QueryResultToken getToken() {
    return token;
  }


  public void setToken(QueryResultToken token) {
    this.token = token;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryResult queryResult = (QueryResult) o;
    return Objects.equals(this.banner, queryResult.banner) &&
        Objects.equals(this.featureScore, queryResult.featureScore) &&
        Objects.equals(this.indexScore, queryResult.indexScore) &&
        Objects.equals(this.neuralScore, queryResult.neuralScore) &&
        Objects.equals(this.record, queryResult.record) &&
        Objects.equals(this.relevanceScore, queryResult.relevanceScore) &&
        Objects.equals(this.score, queryResult.score) &&
        Objects.equals(this.token, queryResult.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(banner, featureScore, indexScore, neuralScore, record, relevanceScore, score, token);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryResult {\n");
    sb.append("    banner: ").append(toIndentedString(banner)).append("\n");
    sb.append("    featureScore: ").append(toIndentedString(featureScore)).append("\n");
    sb.append("    indexScore: ").append(toIndentedString(indexScore)).append("\n");
    sb.append("    neuralScore: ").append(toIndentedString(neuralScore)).append("\n");
    sb.append("    record: ").append(toIndentedString(record)).append("\n");
    sb.append("    relevanceScore: ").append(toIndentedString(relevanceScore)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

