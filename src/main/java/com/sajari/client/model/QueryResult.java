/*
 * Sajari API
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@sajari.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sajari.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * QueryResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class QueryResult {
    public static final String SERIALIZED_NAME_RECORD = "record";
    @SerializedName(SERIALIZED_NAME_RECORD)
    private Object record;

    public static final String SERIALIZED_NAME_SCORE = "score";
    @SerializedName(SERIALIZED_NAME_SCORE)
    private Double score;

    public static final String SERIALIZED_NAME_INDEX_SCORE = "index_score";
    @SerializedName(SERIALIZED_NAME_INDEX_SCORE)
    private Double indexScore;

    public static final String SERIALIZED_NAME_TOKEN = "token";
    @SerializedName(SERIALIZED_NAME_TOKEN)
    private QueryResultToken token;


    public QueryResult record(Object record) {

        this.record = record;
        return this;
    }

    /**
     * An object made up of field-value pairs that contains the record data.
     *
     * @return record
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "An object made up of field-value pairs that contains the record data.")

    public Object getRecord() {
        return record;
    }


    public void setRecord(Object record) {
        this.record = record;
    }


    public QueryResult score(Double score) {

        this.score = score;
        return this;
    }

    /**
     * The normalized score attributed to this record. Combines the index score and feature score.
     *
     * @return score
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The normalized score attributed to this record. Combines the index score and feature score.")

    public Double getScore() {
        return score;
    }


    public void setScore(Double score) {
        this.score = score;
    }


    public QueryResult indexScore(Double indexScore) {

        this.indexScore = indexScore;
        return this;
    }

    /**
     * Index score.
     *
     * @return indexScore
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Index score.")

    public Double getIndexScore() {
        return indexScore;
    }


    public void setIndexScore(Double indexScore) {
        this.indexScore = indexScore;
    }


    public QueryResult token(QueryResultToken token) {

        this.token = token;
        return this;
    }

    /**
     * Get token
     *
     * @return token
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public QueryResultToken getToken() {
        return token;
    }


    public void setToken(QueryResultToken token) {
        this.token = token;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        QueryResult queryResult = (QueryResult) o;
        return Objects.equals(this.record, queryResult.record) &&
                Objects.equals(this.score, queryResult.score) &&
                Objects.equals(this.indexScore, queryResult.indexScore) &&
                Objects.equals(this.token, queryResult.token);
    }

    @Override
    public int hashCode() {
        return Objects.hash(record, score, indexScore, token);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class QueryResult {\n");
        sb.append("    record: ").append(toIndentedString(record)).append("\n");
        sb.append("    score: ").append(toIndentedString(score)).append("\n");
        sb.append("    indexScore: ").append(toIndentedString(indexScore)).append("\n");
        sb.append("    token: ").append(toIndentedString(token)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

