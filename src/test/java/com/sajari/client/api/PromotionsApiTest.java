/*
 * Search.io API
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sajari.client.api;

import com.sajari.client.ApiException;
import com.sajari.client.model.Error;
import com.sajari.client.model.ListPromotionsResponse;
import com.sajari.client.model.Promotion;
import org.junit.Test;
import org.junit.Ignore;


/**
 * API tests for PromotionsApi
 */
@Ignore
public class PromotionsApiTest {

    private final PromotionsApi api = new PromotionsApi();

    
    /**
     * Create promotion
     *
     * Create a new promotion in a collection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPromotionTest() throws ApiException {
        String collectionId = null;
        Promotion promotion = null;
        String accountId = null;
                Promotion response = api.createPromotion(collectionId, promotion, accountId);
        // TODO: test validations
    }
    
    /**
     * Delete promotion
     *
     * Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePromotionTest() throws ApiException {
        String collectionId = null;
        String promotionId = null;
        String accountId = null;
                Object response = api.deletePromotion(collectionId, promotionId, accountId);
        // TODO: test validations
    }
    
    /**
     * Get promotion
     *
     * Retrieve the details of a promotion.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPromotionTest() throws ApiException {
        String collectionId = null;
        String promotionId = null;
        String accountId = null;
                Promotion response = api.getPromotion(collectionId, promotionId, accountId);
        // TODO: test validations
    }
    
    /**
     * List promotions
     *
     * Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPromotionsTest() throws ApiException {
        String collectionId = null;
        String accountId = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
                ListPromotionsResponse response = api.listPromotions(collectionId, accountId, pageSize, pageToken, view);
        // TODO: test validations
    }
    
    /**
     * Update promotion
     *
     * Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePromotionTest() throws ApiException {
        String collectionId = null;
        String promotionId = null;
        String updateMask = null;
        Promotion promotion = null;
        String accountId = null;
                Promotion response = api.updatePromotion(collectionId, promotionId, updateMask, promotion, accountId);
        // TODO: test validations
    }
    
}
