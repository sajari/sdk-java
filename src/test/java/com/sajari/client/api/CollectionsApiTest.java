/*
 * Sajari API
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@sajari.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sajari.client.api;

import com.sajari.client.ApiException;
import com.sajari.client.model.Collection;
import com.sajari.client.model.ListCollectionsResponse;
import com.sajari.client.model.QueryCollectionRequest;
import com.sajari.client.model.QueryCollectionResponse;
import org.junit.Ignore;
import org.junit.Test;


/**
 * API tests for CollectionsApi
 */
@Ignore
public class CollectionsApiTest {

    private final CollectionsApi api = new CollectionsApi();


    /**
     * Create collection
     * <p>
     * Create an empty collection.  Before records can be added to a collection, the schema and pipelines for the collection have to be set up. Consider setting up new collections via the Sajari Console, which handles the creation of the schema and pipelines for you.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCollectionTest() throws ApiException {
        String collectionId = null;
        Collection collection = null;
        Collection response = api.createCollection(collectionId, collection);

        // TODO: test validations
    }

    /**
     * Delete collection
     * <p>
     * Delete a collection and all of its associated data.  &gt; Note: this operation cannot be reversed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCollectionTest() throws ApiException {
        String collectionId = null;
        Object response = api.deleteCollection(collectionId);

        // TODO: test validations
    }

    /**
     * Get collection
     * <p>
     * Retrieve the details of a collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCollectionTest() throws ApiException {
        String collectionId = null;
        Collection response = api.getCollection(collectionId);

        // TODO: test validations
    }

    /**
     * List collections
     * <p>
     * Retrieve a list of collections in the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCollectionsTest() throws ApiException {
        Integer pageSize = null;
        String pageToken = null;
        ListCollectionsResponse response = api.listCollections(pageSize, pageToken);

        // TODO: test validations
    }

    /**
     * Query collection
     * <p>
     * Query the collection to search for records.  The following example demonstrates how to run a simple search for a particular string:  &#x60;&#x60;&#x60;json {   \&quot;variables\&quot;: { \&quot;q\&quot;: \&quot;search terms\&quot; } } &#x60;&#x60;&#x60;  For more information:  - See [filtering content](https://www.sajari.com/docs/user-guide/integrating-search/filters/) - See [tracking in the Go SDK](https://github.com/sajari/sdk-go/blob/v2/session.go) - See [tracking in the JS SDK](https://github.com/sajari/sajari-sdk-js/blob/master/src/session.ts)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryCollectionTest() throws ApiException {
        String collectionId = null;
        QueryCollectionRequest queryCollectionRequest = null;
        String accountId = null;
        QueryCollectionResponse response = api.queryCollection(collectionId, queryCollectionRequest, accountId);

        // TODO: test validations
    }

    /**
     * Update collection
     * <p>
     * Update the details of a collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCollectionTest() throws ApiException {
        String collectionId = null;
        Collection collection = null;
        String updateMask = null;
        Collection response = api.updateCollection(collectionId, collection, updateMask);

        // TODO: test validations
    }

}
